### Questions

1. What is responsible for defining the routes of the `games` resource?

createRouter

2. What do you notice about the folder structure?  Whats the client responsible for? Whats the server responsible for?

The client is responsible for the user interface and front end, and the server is responsible for the back end

3. What are the the responsibilities of server.js?

Allows us to use cors and express, connects us to the games database via mongodb, listens for requests from the port specified.

4. What are the responsibilities of the `gamesRouter`?

GamesRouter is responsible for handling routes within the app

5. What process does the the client (front-end) use to communicate with the server?

A fetch request

6. What optional second argument does the `fetch` method take? And what is it used for in this application? Hint: See [Using Fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch) on the MDN docs

Init can be passed as a second parameter

7. Which of the games API routes does the front-end application consume (i.e. make requests to)?

Get, post and delete

8. What are we using the [MongoDB Driver](http://mongodb.github.io/node-mongodb-native/) for?

It allows to node.js and mongodb to communicate with eachother.